<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<!--<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
		<namespace name="AOP.UnityInterceptors"/>
		<assembly name="AOP.UnityInterceptors"/>
		<sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration"/>
		<container>
			<extension type="Interception"/>
			<interception>
				<policy name="Policy">
					<matchingRule name="Match" type="Microsoft.Practices.Unity.InterceptionExtension.CustomAttributeMatchingRule, Microsoft.Practices.Unity.Interception">
						<constructor>
							<param name="attributeType" value="AOP.UnityInterceptors.CustomAttributes.LoggingInterceptorAttribute, AOP.UnityInterceptors"/>
							--><!--typeConverter="AssemblyQualifiedTypeNameConverter" --><!--
							<param name="inherited">
								<value value="false"/>
							</param>
						</constructor>
					</matchingRule>
					--><!--this is the place Where we define our interceptors--><!--
					<callHandler name="Logging" type="LoggingInterceptor">
						<lifetime type="singleton"/>
					</callHandler>
				</policy>
			</interception>
			<register type="AOP.UnityInterceptors.IBusinessFunctionality,AOP.UnityInterceptors" mapTo="AOP.UnityInterceptors.BusinessFunctionality,AOP.UnityInterceptors">
				<interceptor type="InterfaceInterceptor"/>
				<interceptionBehavior type="PolicyInjectionBehavior"/>
			</register>
		</container>
	</unity>-->

	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
	</startup>
</configuration>